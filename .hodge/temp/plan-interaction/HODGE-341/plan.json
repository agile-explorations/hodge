{
  "feature": "HODGE-341",
  "type": "epic",
  "stories": [
    {
      "id": "HODGE-341.1",
      "title": "Core Toolchain Infrastructure (TypeScript/JS)",
      "description": "Complete feature: Tool detection → config generation → execution → diagnostic aggregation. ToolchainService + DiagnosticsService, tool detectors for tsc/eslint/prettier/vitest, toolchain.yaml generation, InitCommand integration. Developers can run 'hodge init' and get working quality checks.",
      "effort": "large",
      "dependencies": [],
      "lane": 0
    },
    {
      "id": "HODGE-341.2",
      "title": "Advanced Tool Integration (Complexity, Duplication, Security)",
      "description": "Complete feature: Extended quality checks with eslint-plugin-sonarjs, jscpd, dependency-cruiser, Semgrep with bundled framework rules (Prisma, React, GraphQL). Tool scoping implementation. Developers get comprehensive quality checks.",
      "effort": "medium",
      "dependencies": ["HODGE-341.1"],
      "lane": 0
    },
    {
      "id": "HODGE-341.3",
      "title": "Critical File Selection & AI Integration",
      "description": "Complete feature: CriticalFileSelector with scoring algorithm (critical paths, issues, complexity, security), cap at top 10 files. Update /harden command for ToolchainService → DiagnosticsService → AI review flow. Scalable to 100+ file changes.",
      "effort": "medium",
      "dependencies": ["HODGE-341.1", "HODGE-341.2"],
      "lane": 1
    },
    {
      "id": "HODGE-341.4",
      "title": "AI Profile Compression (87% Token Reduction)",
      "description": "Complete feature: Dual format profiles (.md for humans, .yaml for AI). Migrate typescript-5.x and testing profiles. Add tool_checks and ai_checks sections. AI reviews use 87% fewer tokens (1500 → 200 per profile).",
      "effort": "small",
      "dependencies": ["HODGE-341.3"],
      "lane": 1
    },
    {
      "id": "HODGE-341.5",
      "title": "Multi-Language Support (Python, Go, Rust) with Full Parity",
      "description": "Complete feature: Quality checks work across multiple languages with same capabilities as TypeScript. Tool detectors for Python (mypy, pylint, pytest, black, radon), Go (golangci-lint, go test), Rust (clippy, cargo test). Monorepo support with 'language: multi' in toolchain.yaml. Includes advanced tools (complexity, duplication, security) for all languages.",
      "effort": "large",
      "dependencies": ["HODGE-341.1", "HODGE-341.2"],
      "lane": 0
    },
    {
      "id": "HODGE-341.6",
      "title": "Auto-Fix Workflow",
      "description": "Complete feature: Tools auto-fix simple issues (eslint --fix, prettier --write), AI assists with complex fixes using Edit tool. Communication flow: Tools → CLI → AI → User. Update /harden template. Developers get automatic fixes for formatting/style, AI suggestions for complex issues.",
      "effort": "small",
      "dependencies": ["HODGE-341.3"],
      "lane": 2
    }
  ],
  "lanes": {
    "count": 3,
    "assignments": {
      "0": ["HODGE-341.1", "HODGE-341.2", "HODGE-341.5"],
      "1": ["HODGE-341.3", "HODGE-341.4"],
      "2": ["HODGE-341.6"]
    }
  },
  "dependencies": {
    "HODGE-341.2": ["HODGE-341.1"],
    "HODGE-341.3": ["HODGE-341.1", "HODGE-341.2"],
    "HODGE-341.4": ["HODGE-341.3"],
    "HODGE-341.5": ["HODGE-341.1", "HODGE-341.2"],
    "HODGE-341.6": ["HODGE-341.3"]
  },
  "estimatedDays": 20,
  "createdAt": "2025-10-10T10:15:00.000Z"
}
